{"ast":null,"code":"import { API_BASE_URL } from \"../constants\";\n// Function to create an expense in the backend. Method: POST\nexport const createExpense = async expense => {\n  const response = await fetch(`${API_BASE_URL}/expenses`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(expense)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create expense\");\n  }\n  return response.json();\n};\n\n// Function to delete an expense in the backend. Method: DELETE\nexport const deleteExpense = async id => {\n  const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete expense\");\n  }\n};\n\n// Function to get all expenses from the backend. Method: GET\nexport const fetchExpenses = async () => {\n  const response = await fetch(`${API_BASE_URL}/expenses`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch expenses');\n  }\n\n  // Parsing the response to get the data\n  let expenseList = response.json().then(jsonResponse => {\n    console.log(\"data in fetchExpenses\", jsonResponse);\n    return jsonResponse.data;\n  });\n  console.log(\"response in fetchExpenses\", expenseList);\n  return expenseList;\n};","map":{"version":3,"names":["API_BASE_URL","createExpense","expense","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","deleteExpense","id","fetchExpenses","expenseList","then","jsonResponse","console","log","data"],"sources":["C:/Users/rishi/Downloads/newlab41024/fa24-cse110-lab4-starter-code/client/src/utils/expense-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants\";\r\nimport { Expense } from \"../types/types\";\r\n\r\n// Function to create an expense in the backend. Method: POST\r\nexport const createExpense = async (expense: Expense): Promise<Expense> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/expenses`, {\r\n    \tmethod: \"POST\",\r\n    \theaders: {\r\n        \t\"Content-Type\": \"application/json\",\r\n    \t},\r\n    \tbody: JSON.stringify(expense),\r\n\t});\r\n\tif (!response.ok) {\r\n    \tthrow new Error(\"Failed to create expense\");\r\n\t}\r\n\treturn response.json();\r\n};\r\n\r\n// Function to delete an expense in the backend. Method: DELETE\r\nexport const deleteExpense = async (id: string): Promise<void> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\r\n    \tmethod: \"DELETE\",\r\n\t});\r\n\tif (!response.ok) {\r\n    \tthrow new Error(\"Failed to delete expense\");\r\n\t}\r\n};\r\n\r\n// Function to get all expenses from the backend. Method: GET\r\nexport const fetchExpenses = async (): Promise<Expense[]> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/expenses`);\r\n\tif (!response.ok) {\r\n    \tthrow new Error('Failed to fetch expenses');\r\n\t}\r\n\r\n\t// Parsing the response to get the data\r\n\tlet expenseList = response.json().then((jsonResponse) => {\r\n    \tconsole.log(\"data in fetchExpenses\", jsonResponse);\r\n    \treturn jsonResponse.data;\r\n\t});\r\n\r\n\tconsole.log(\"response in fetchExpenses\", expenseList);\r\n\treturn expenseList;\r\n};\t"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAG3C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAgB,IAAuB;EAC1E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,EAAE;IACrDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAChC,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACvB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAU,IAAoB;EACjE,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAac,EAAE,EAAE,EAAE;IAC3DT,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;AACD,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAgC;EAC5D,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;EACxD,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;;EAEA;EACA,IAAIK,WAAW,GAAGb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACK,IAAI,CAAEC,YAAY,IAAK;IACrDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,YAAY,CAAC;IAClD,OAAOA,YAAY,CAACG,IAAI;EAC5B,CAAC,CAAC;EAEFF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,WAAW,CAAC;EACrD,OAAOA,WAAW;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}