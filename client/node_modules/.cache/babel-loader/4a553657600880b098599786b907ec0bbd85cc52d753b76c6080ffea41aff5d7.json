{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\Downloads\\\\newlab41024\\\\fa24-cse110-lab4-starter-code\\\\client\\\\src\\\\components\\\\Budget\\\\Budget.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { fetchBudget, updateBudget } from \"../../utils/budget-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Budget = () => {\n  _s();\n  const {\n    budget,\n    setBudget\n  } = useContext(AppContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newBudget, setNewBudget] = useState(budget.toString());\n  useEffect(() => {\n    const loadBudget = async () => {\n      try {\n        const budgetAmount = await fetchBudget();\n        setBudget(budgetAmount);\n        setNewBudget(budgetAmount.toString());\n      } catch (error) {\n        console.error('Failed to load budget:', error);\n      }\n    };\n    loadBudget();\n  }, [setBudget]);\n  const handleEditClick = async () => {\n    if (isEditing) {\n      const budgetValue = parseFloat(newBudget);\n      if (!isNaN(budgetValue) && budgetValue > 0) {\n        try {\n          // Update budget in backend first\n          const updatedBudget = await updateBudget(budgetValue);\n          // If successful, update local state\n          setBudget(updatedBudget);\n        } catch (error) {\n          console.error('Failed to update budget:', error);\n          // Revert to previous budget value\n          setNewBudget(budget.toString());\n        }\n      }\n    }\n    setIsEditing(!isEditing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"budget-input\",\n      type: \"number\",\n      className: \"form-control\",\n      value: newBudget,\n      onChange: e => setNewBudget(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"budget-display\",\n      children: [\"Budget: $\", budget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn btn-${isEditing ? 'success' : 'primary'} ms-2`,\n      onClick: handleEditClick,\n      \"aria-label\": isEditing ? 'Save budget' : 'Edit budget',\n      children: isEditing ? 'Save' : 'Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"WWDQ877fz7m8vXs+IGZ0avQX3Lo=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["useContext","useState","useEffect","AppContext","fetchBudget","updateBudget","jsxDEV","_jsxDEV","Budget","_s","budget","setBudget","isEditing","setIsEditing","newBudget","setNewBudget","toString","loadBudget","budgetAmount","error","console","handleEditClick","budgetValue","parseFloat","isNaN","updatedBudget","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rishi/Downloads/newlab41024/fa24-cse110-lab4-starter-code/client/src/components/Budget/Budget.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { fetchBudget, updateBudget } from \"../../utils/budget-utils\";\r\n\r\nconst Budget = () => {\r\n  const { budget, setBudget } = useContext(AppContext);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newBudget, setNewBudget] = useState(budget.toString());\r\n\r\n  useEffect(() => {\r\n    const loadBudget = async () => {\r\n      try {\r\n        const budgetAmount = await fetchBudget();\r\n        setBudget(budgetAmount);\r\n        setNewBudget(budgetAmount.toString());\r\n      } catch (error) {\r\n        console.error('Failed to load budget:', error);\r\n      }\r\n    };\r\n\r\n    loadBudget();\r\n  }, [setBudget]);\r\n\r\n  const handleEditClick = async () => {\r\n    if (isEditing) {\r\n      const budgetValue = parseFloat(newBudget);\r\n      if (!isNaN(budgetValue) && budgetValue > 0) {\r\n        try {\r\n          // Update budget in backend first\r\n          const updatedBudget = await updateBudget(budgetValue);\r\n          // If successful, update local state\r\n          setBudget(updatedBudget);\r\n        } catch (error) {\r\n          console.error('Failed to update budget:', error);\r\n          // Revert to previous budget value\r\n          setNewBudget(budget.toString());\r\n        }\r\n      }\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  return (\r\n    <div className=\"alert alert-secondary p-3 d-flex align-items-center justify-content-between\">\r\n      {isEditing ? (\r\n        <input\r\n          data-testid=\"budget-input\"\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={newBudget}\r\n          onChange={(e) => setNewBudget(e.target.value)}\r\n        />\r\n      ) : (\r\n        <div data-testid=\"budget-display\">Budget: ${budget}</div>\r\n      )}\r\n      <button\r\n        className={`btn btn-${isEditing ? 'success' : 'primary'} ms-2`}\r\n        onClick={handleEditClick}\r\n        aria-label={isEditing ? 'Save budget' : 'Edit budget'}\r\n      >\r\n        {isEditing ? 'Save' : 'Edit'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}