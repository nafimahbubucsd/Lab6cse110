{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch budget');\n  }\n  const jsonResponse = await response.json();\n  return jsonResponse.data;\n};\n\n// Function to update the budget in the backend. Method: PUT\nexport const updateBudget = async newBudget => {\n  const response = await fetch(`${API_BASE_URL}/budget`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      amount: newBudget\n    })\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to update budget');\n  }\n  const jsonResponse = await response.json();\n  return jsonResponse.data;\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","jsonResponse","json","data","updateBudget","newBudget","method","headers","body","JSON","stringify","amount","errorData","error"],"sources":["C:/Users/rishi/Downloads/lab5new11_1_24/lab5_backup/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\r\n\r\n// Function to get budget from the backend. Method: GET\r\nexport const fetchBudget = async (): Promise<number> => {\r\n    const response = await fetch(`${API_BASE_URL}/budget`);\r\n    \r\n    if (!response.ok) {\r\n        throw new Error('Failed to fetch budget');\r\n    }\r\n\r\n    const jsonResponse = await response.json();\r\n    return jsonResponse.data;\r\n};\r\n\r\n// Function to update the budget in the backend. Method: PUT\r\nexport const updateBudget = async (newBudget: number): Promise<number> => {\r\n    const response = await fetch(`${API_BASE_URL}/budget`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ amount: newBudget })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to update budget');\r\n    }\r\n\r\n    const jsonResponse = await response.json();\r\n    return jsonResponse.data;\r\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EAEtD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC1C,OAAOD,YAAY,CAACE,IAAI;AAC5B,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAiB,IAAsB;EACtE,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IACnDW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAEN;IAAU,CAAC;EAC9C,CAAC,CAAC;EAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMa,SAAS,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIF,KAAK,CAACY,SAAS,CAACC,KAAK,IAAI,yBAAyB,CAAC;EACjE;EAEA,MAAMZ,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC1C,OAAOD,YAAY,CAACE,IAAI;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}