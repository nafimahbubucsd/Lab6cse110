{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\"; // Updated import path\n\n// Function to create an expense in the backend. Method: POST\n// src/utils/expense-utils.js\nexport const createExpense = async expense => {\n  const response = await fetch(\"http://localhost:8080/expenses\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(expense)\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to create expense: ${response.statusText}`);\n  }\n  return await response.json();\n};\n\n// Function to delete an expense in the backend. Method: DELETE\nexport const deleteExpense = async id => {\n  const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete expense\");\n  }\n};\n\n// Function to get all expenses from the backend. Method: GET\nexport const fetchExpenses = async () => {\n  const response = await fetch(`${API_BASE_URL}/expenses`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch expenses');\n  }\n  const jsonResponse = await response.json();\n  return jsonResponse.data;\n};","map":{"version":3,"names":["API_BASE_URL","createExpense","expense","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","deleteExpense","id","fetchExpenses","jsonResponse","data"],"sources":["/Users/nafimahbub/lab5_backup/client/src/utils/expense-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";  // Updated import path\nimport { Expense } from \"../types/types\";\n\n// Function to create an expense in the backend. Method: POST\n// src/utils/expense-utils.js\nexport const createExpense = async (expense) => {\n    const response = await fetch(\"http://localhost:8080/expenses\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(expense),\n    });\n\n    if (!response.ok) {\n        throw new Error(`Failed to create expense: ${response.statusText}`);\n    }\n\n    return await response.json();\n};\n\n// Function to delete an expense in the backend. Method: DELETE\nexport const deleteExpense = async (id: string): Promise<void> => {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n        method: \"DELETE\",\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to delete expense\");\n    }\n};\n\n// Function to get all expenses from the backend. Method: GET\nexport const fetchExpenses = async (): Promise<Expense[]> => {\n    const response = await fetch(`${API_BASE_URL}/expenses`);\n    if (!response.ok) {\n        throw new Error('Failed to fetch expenses');\n    }\n\n    const jsonResponse = await response.json();\n    return jsonResponse.data;\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB,CAAC,CAAE;;AAGxD;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAChC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,6BAA6BR,QAAQ,CAACS,UAAU,EAAE,CAAC;EACvE;EAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAU,IAAoB;EAC9D,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAae,EAAE,EAAE,EAAE;IAC3DV,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAgC;EACzD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;EACxD,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EAEA,MAAMM,YAAY,GAAG,MAAMd,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC1C,OAAOI,YAAY,CAACC,IAAI;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}