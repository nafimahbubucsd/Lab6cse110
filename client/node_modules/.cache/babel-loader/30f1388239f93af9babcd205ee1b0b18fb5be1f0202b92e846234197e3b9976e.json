{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend\nexport const fetchBudget = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/budget`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    throw new Error('Failed to fetch budget');\n  }\n};\n\n// Function to update the budget in the backend\nexport const updateBudget = async amount => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/budget`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update budget');\n    }\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    throw new Error('Failed to update budget');\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","data","json","error","updateBudget","amount","method","headers","body","JSON","stringify"],"sources":["C:/Users/rishi/Downloads/lab5new11_1_24/lab5_backup/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\r\n\r\n// Function to get budget from the backend\r\nexport const fetchBudget = async (): Promise<number> => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/budget`);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return data.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to fetch budget');\r\n    }\r\n};\r\n\r\n// Function to update the budget in the backend\r\nexport const updateBudget = async (amount: number): Promise<number> => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/budget`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ amount }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to update budget');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to update budget');\r\n    }\r\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;IACtD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAM,IAAIH,KAAK,CAAC,wBAAwB,CAAC;EAC7C;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAG,MAAOC,MAAc,IAAsB;EACnE,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;MACnDW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAO,CAAC;IACnC,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC9C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAM,IAAIH,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}